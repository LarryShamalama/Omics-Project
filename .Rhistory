library("ggplot2")
getwd()
setwd('~')
getwd()
setwd('~/Documents/GitHub/Omics-Project/data')
# import data
features_all_samples<- read.csv("M2PHDS_19-20_OMICS_CLIN_DATA_MAARS_all_Fri_Apr_04_14h_CEST_2014.csv", sep="\t")
features_AD_samples<- read.csv("M2PHDS_19-20_OMICS_CLIN_DATA_MAARS_AD_full_20190131_12-34-49.csv", sep="\t")
gene_samples<- read.csv("M2PHDS_19-20_OMICS_TRANSC_MAARS_normTranscriptome_618samples_16042014.txt", sep="\t")
# create dataset of unique participants
reduce<- features_all_samples[ ,c(6,2,7:34)]
undup_pts<- reduce[!duplicated(reduce$MAARS_identifier), ]
# AD and control group
addmargins(table(undup_pts$clinical_group))
# gender (percent)
round(prop.table(table(undup_pts$Gender))*100, 2)
# age (mean)
round(mean(undup_pts$CUSTOM_Age, na.rm=TRUE))
# age (summary/spread)
summary(undup_pts$CUSTOM_Age)
# institution (percent)
round(prop.table(table(undup_pts$Institution))*100, 2)
# Global Assessment Score
table(undup_pts$Global_Assessment_Score)
round(prop.table(table(undup_pts$Global_Assessment_Score))*100,2)
#  plot of GAS per clinical group
ggplot(undup_pts) +
geom_bar(aes(x=clinical_group, fill=Global_Assessment_Score), position="fill") +
scale_x_discrete(limits=c("AD","PSO","CTRL")) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
scale_fill_brewer()+
theme(panel.background = element_rect(fill = "grey95"),
panel.grid.major = element_line(colour = "grey70"),
plot.background  = element_rect(fill="white")) +
ylab("Clinical Group") +
xlab("Percent")
# Known allergies
library(qdapTools)
allergies<- (mtabulate(undup_pts[grep('Allergies',names(undup_pts), value=T)]))
allergies$percent<- allergies[,2]/allergies[,1]+allergies[,2]
# Medications
meds<- (mtabulate(undup_pts[grep('Medication',names(undup_pts), value=T)]))
meds$percent<- meds[,2]/meds[,1]+meds[,2]
# Chronic Disease
chrondis<- (mtabulate(undup_pts[grep('chronic',names(undup_pts), value=T)]))
chrondis$percent<- chrondis[,2]/chrondis[,1]+chrondis[,2]
# Chronic Disease
malig<- (mtabulate(undup_pts[grep('Malig',names(undup_pts), value=T)]))
malig$percent<- malig[,2]/malig[,1]+malig[,2]
# Family History of AD or Psoriasis
FamHist<- (mtabulate(undup_pts[grep('Fam',names(undup_pts), value=T)]))
FamHist$percent<- FamHist[,2]/FamHist[,1]+FamHist[,2]
### How to group the above tables by clinical_group? Getting errors when piping...
library("dplyr")
FamHist<- undup_pts %>%
group_by(undup_pts$clinical_group) %>%
mtabulate(undup_pts[grep('Fam',names(undup_pts), value=T)])
# create dataset of unique participants
reduce<- features_all_samples[ ,c(6,2,7:34)]
reduce
attributes(reduce)
colnames(reduce)
colnames(features_all_samples)
source('~/Documents/GitHub/Omics-Project/data/ExploreParticipantData.R', echo=TRUE)
install.packages('ggplot2')
# import data
features_all_samples<- read.csv("M2PHDS_19-20_OMICS_CLIN_DATA_MAARS_all_Fri_Apr_04_14h_CEST_2014.csv", sep="\t")
features_AD_samples<- read.csv("M2PHDS_19-20_OMICS_CLIN_DATA_MAARS_AD_full_20190131_12-34-49.csv", sep="\t")
gene_samples<- read.csv("M2PHDS_19-20_OMICS_TRANSC_MAARS_normTranscriptome_618samples_16042014.txt", sep="\t")
# create dataset of unique participants
reduce<- features_all_samples[ ,c(6,2,7:34)]
undup_pts<- reduce[!duplicated(reduce$MAARS_identifier), ]
# AD and control group
addmargins(table(undup_pts$clinical_group))
?addmargins
table(undup_pts$clinical_group)
table(undup_pts$clinical_group)
undup_pts$clinical_group
?duplicated
# gender (percent)
round(prop.table(table(undup_pts$Gender))*100, 2)
?prop.table
# age (mean)
round(mean(undup_pts$CUSTOM_Age, na.rm=TRUE))
# age (summary/spread)
summary(undup_pts$CUSTOM_Age)
# institution (percent)
round(prop.table(table(undup_pts$Institution))*100, 2)
# Global Assessment Score
table(undup_pts$Global_Assessment_Score)
round(prop.table(table(undup_pts$Global_Assessment_Score))*100,2)
#  plot of GAS per clinical group
ggplot(undup_pts) +
geom_bar(aes(x=clinical_group, fill=Global_Assessment_Score), position="fill") +
scale_x_discrete(limits=c("AD","PSO","CTRL")) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
scale_fill_brewer()+
theme(panel.background = element_rect(fill = "grey95"),
panel.grid.major = element_line(colour = "grey70"),
plot.background  = element_rect(fill="white")) +
ylab("Clinical Group") +
xlab("Percent")
library("ggplot2")
# Global Assessment Score
table(undup_pts$Global_Assessment_Score)
round(prop.table(table(undup_pts$Global_Assessment_Score))*100,2)
#  plot of GAS per clinical group
ggplot(undup_pts) +
geom_bar(aes(x=clinical_group, fill=Global_Assessment_Score), position="fill") +
scale_x_discrete(limits=c("AD","PSO","CTRL")) +
theme(axis.text.x=element_text(angle=90,hjust=1)) +
scale_fill_brewer()+
theme(panel.background = element_rect(fill = "grey95"),
panel.grid.major = element_line(colour = "grey70"),
plot.background  = element_rect(fill="white")) +
ylab("Clinical Group") +
xlab("Percent")
# Known allergies
library(qdapTools)
install.packages('qdapTools')
# Known allergies
library(qdapTools)
allergies<- (mtabulate(undup_pts[grep('Allergies',names(undup_pts), value=T)]))
allergies$percent<- allergies[,2]/allergies[,1]+allergies[,2]
# Medications
meds<- (mtabulate(undup_pts[grep('Medication',names(undup_pts), value=T)]))
meds$percent<- meds[,2]/meds[,1]+meds[,2]
# Chronic Disease
chrondis<- (mtabulate(undup_pts[grep('chronic',names(undup_pts), value=T)]))
chrondis$percent<- chrondis[,2]/chrondis[,1]+chrondis[,2]
# Chronic Disease
malig<- (mtabulate(undup_pts[grep('Malig',names(undup_pts), value=T)]))
# Known allergies
library(qdapTools)
allergies<- (mtabulate(undup_pts[grep('Allergies',names(undup_pts), value=T)]))
# Known allergies
library(qdapTools, repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
install.packages("qdapTools",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
# Known allergies
library(qdapTools)
# Known allergies
library(qdapTools)
install.packages('qdapTools', dependencies = TRUE)
# Known allergies
library(qdapTools)
install.packages('qdapTools', dependencies = TRUE)
# Known allergies
library(qdapTools)
install.packages("data.table", repos="https://Rdatatable.gitlab.io/data.table")
rstudioapi::getSourceEditorContext()$path
library(rstudioapi)
install.packages('rstudioapi')
rstudioapi::getSourceEditorContext()$path
dirname(rstudioapi::getSourceEditorContext()$path)
# set directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library('rstudioapi')
source('~/Documents/GitHub/Omics-Project/data/ExploreParticipantData.R', echo=TRUE)
install.packages('data.table')
install.packages('data.table')
setwd('~/Documents/McGill/Research/data/')
test=read.table('All_IL7.txt')
head(table)
head(test)
table(test[,2])
hist(table(test[,2]))
hist(table(test[,2]),breaks=seq(0,767))
hist(table(test[,2]),breaks=seq(1,767))
hist(table(test[test[,2]>1,2]),breaks=seq(1,767))
table
test
View(test)
head(test)
test[test[,9]!=0,]
install.packages('FactoMineR')
devtools::install_github("Rdatatable/data.table")
install.packages('devtools')
devtools::install_github("Rdatatable/data.table")
devtools::install_github("Rdatatable/data.table")
install.packages('FactoMineR')
source('~/Documents/GitHub/Omics-Project/data/ExploreParticipantData.R', echo=TRUE)
setwd('~/Documents/Digital Public Health/gene annotations/')
load("SinghaniaTB_data.Rdata")
library('FactoMineR')
Leicester_norm
head(Leicester_norm)
cor(data.frame(x, y, z))
x <- Leicester_norm[1, -(1:3)]
y <- Leicester_norm[2, -(1:3)]
z <- Leicester_norm[3, -(1:3)]
cor(data.frame(x, y, z))
cor(data.frame(x, y, z))
x <- as.numeric(Leicester_norm[1, -(1:3)])
y <- as.numeric(Leicester_norm[2, -(1:3)])
z <- as.numeric(Leicester_norm[3, -(1:3)])
cor(data.frame(x, y, z))
three_genes <- PCA(X=a)
library('FactoMineR')
three_genes <- PCA(X=a)
a <- data.frame(x, y, z)
z2 <- as.numeric(Leicester_norm[5353, -(1:3)])
y2 <- as.numeric(Leicester_norm[4324, -(1:3)])
z2 <- as.numeric(Leicester_norm[5353, -(1:3)])
test=read.table('All_IL7.txt')
source('~/.active-rstudio-document', echo=TRUE)
setwd('~/Documents/McGill/Research/data/')
setwd('/Users/shamalama/Documents/McGill/Research/data/')
test=read.table('All_IL7.txt')
getwd()
